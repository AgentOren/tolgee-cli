/* tslint:disable */
/* eslint-disable */
/**
 * Tolgee API 
 * Tolgee Server API reference
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    PagedModelTranslationMemoryItemModel,
    PagedModelTranslationMemoryItemModelFromJSON,
    PagedModelTranslationMemoryItemModelToJSON,
    SuggestRequestDto,
    SuggestRequestDtoFromJSON,
    SuggestRequestDtoToJSON,
    SuggestResultModel,
    SuggestResultModelFromJSON,
    SuggestResultModelToJSON,
} from '../models';

export interface TranslationSuggestionApiSuggestMachineTranslations1Request {
    suggestRequestDto: SuggestRequestDto;
    ak?: string;
}

export interface TranslationSuggestionApiSuggestTranslationMemory1Request {
    suggestRequestDto: SuggestRequestDto;
    page?: number;
    size?: number;
    sort?: Array<string>;
    ak?: string;
}

/**
 * 
 */
export class TranslationSuggestionApi extends runtime.BaseAPI {

    /**
     * Suggests machine translations from enabled services
     */
    async suggestMachineTranslations1Raw(requestParameters: TranslationSuggestionApiSuggestMachineTranslations1Request, initOverrides?: RequestInit): Promise<runtime.ApiResponse<SuggestResultModel>> {
        if (requestParameters.suggestRequestDto === null || requestParameters.suggestRequestDto === undefined) {
            throw new runtime.RequiredError('suggestRequestDto','Required parameter requestParameters.suggestRequestDto was null or undefined when calling suggestMachineTranslations1.');
        }

        const queryParameters: any = {};

        if (requestParameters.ak !== undefined) {
            queryParameters['ak'] = requestParameters.ak;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/projects/suggest/machine-translations`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SuggestRequestDtoToJSON(requestParameters.suggestRequestDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SuggestResultModelFromJSON(jsonValue));
    }

    /**
     * Suggests machine translations from enabled services
     */
    async suggestMachineTranslations1(requestParameters: TranslationSuggestionApiSuggestMachineTranslations1Request, initOverrides?: RequestInit): Promise<SuggestResultModel> {
        const response = await this.suggestMachineTranslations1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Suggests machine translations from translation memory.  The result is always sorted by similarity, so sorting is not supported.
     */
    async suggestTranslationMemory1Raw(requestParameters: TranslationSuggestionApiSuggestTranslationMemory1Request, initOverrides?: RequestInit): Promise<runtime.ApiResponse<PagedModelTranslationMemoryItemModel>> {
        if (requestParameters.suggestRequestDto === null || requestParameters.suggestRequestDto === undefined) {
            throw new runtime.RequiredError('suggestRequestDto','Required parameter requestParameters.suggestRequestDto was null or undefined when calling suggestTranslationMemory1.');
        }

        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        if (requestParameters.sort) {
            queryParameters['sort'] = requestParameters.sort;
        }

        if (requestParameters.ak !== undefined) {
            queryParameters['ak'] = requestParameters.ak;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v2/projects/suggest/translation-memory`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SuggestRequestDtoToJSON(requestParameters.suggestRequestDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedModelTranslationMemoryItemModelFromJSON(jsonValue));
    }

    /**
     * Suggests machine translations from translation memory.  The result is always sorted by similarity, so sorting is not supported.
     */
    async suggestTranslationMemory1(requestParameters: TranslationSuggestionApiSuggestTranslationMemory1Request, initOverrides?: RequestInit): Promise<PagedModelTranslationMemoryItemModel> {
        const response = await this.suggestTranslationMemory1Raw(requestParameters, initOverrides);
        return await response.value();
    }

}
