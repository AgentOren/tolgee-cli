/* tslint:disable */
/* eslint-disable */
/**
 * Tolgee API 
 * Tolgee Server API reference
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Translations object containing values updated in this request
 * @export
 * @interface TranslationModel
 */
export interface TranslationModel {
    /**
     * Id of translation record
     * @type {number}
     * @memberof TranslationModel
     */
    id: number;
    /**
     * Translation text
     * @type {string}
     * @memberof TranslationModel
     */
    text?: string;
    /**
     * State of translation
     * @type {string}
     * @memberof TranslationModel
     */
    state: TranslationModelStateEnum;
    /**
     * Was translated using Translation Memory or Machine translation service?
     * @type {boolean}
     * @memberof TranslationModel
     */
    auto: boolean;
    /**
     * Which machine translation service was used to auto translate this
     * @type {string}
     * @memberof TranslationModel
     */
    mtProvider?: TranslationModelMtProviderEnum;
}

/**
* @export
* @enum {string}
*/
export enum TranslationModelStateEnum {
    Untranslated = 'UNTRANSLATED',
    Translated = 'TRANSLATED',
    Reviewed = 'REVIEWED'
}/**
* @export
* @enum {string}
*/
export enum TranslationModelMtProviderEnum {
    Google = 'GOOGLE',
    Aws = 'AWS'
}

export function TranslationModelFromJSON(json: any): TranslationModel {
    return TranslationModelFromJSONTyped(json, false);
}

export function TranslationModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslationModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'state': json['state'],
        'auto': json['auto'],
        'mtProvider': !exists(json, 'mtProvider') ? undefined : json['mtProvider'],
    };
}

export function TranslationModelToJSON(value?: TranslationModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'text': value.text,
        'state': value.state,
        'auto': value.auto,
        'mtProvider': value.mtProvider,
    };
}

