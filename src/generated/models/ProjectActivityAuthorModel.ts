/* tslint:disable */
/* eslint-disable */
/**
 * Tolgee API 
 * Tolgee Server API reference
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Avatar,
    AvatarFromJSON,
    AvatarFromJSONTyped,
    AvatarToJSON,
} from './Avatar';

/**
 * 
 * @export
 * @interface ProjectActivityAuthorModel
 */
export interface ProjectActivityAuthorModel {
    /**
     * 
     * @type {number}
     * @memberof ProjectActivityAuthorModel
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ProjectActivityAuthorModel
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectActivityAuthorModel
     */
    name?: string;
    /**
     * 
     * @type {Avatar}
     * @memberof ProjectActivityAuthorModel
     */
    avatar?: Avatar;
}

export function ProjectActivityAuthorModelFromJSON(json: any): ProjectActivityAuthorModel {
    return ProjectActivityAuthorModelFromJSONTyped(json, false);
}

export function ProjectActivityAuthorModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectActivityAuthorModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'avatar': !exists(json, 'avatar') ? undefined : AvatarFromJSON(json['avatar']),
    };
}

export function ProjectActivityAuthorModelToJSON(value?: ProjectActivityAuthorModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'username': value.username,
        'name': value.name,
        'avatar': AvatarToJSON(value.avatar),
    };
}

