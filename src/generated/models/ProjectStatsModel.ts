/* tslint:disable */
/* eslint-disable */
/**
 * Tolgee API 
 * Tolgee Server API reference
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LanguageStatsModel,
    LanguageStatsModelFromJSON,
    LanguageStatsModelFromJSONTyped,
    LanguageStatsModelToJSON,
} from './LanguageStatsModel';

/**
 * 
 * @export
 * @interface ProjectStatsModel
 */
export interface ProjectStatsModel {
    /**
     * 
     * @type {number}
     * @memberof ProjectStatsModel
     */
    projectId: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectStatsModel
     */
    languageCount: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectStatsModel
     */
    keyCount: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectStatsModel
     */
    baseWordsCount: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectStatsModel
     */
    translatedPercentage: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectStatsModel
     */
    reviewedPercentage: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectStatsModel
     */
    membersCount: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectStatsModel
     */
    tagCount: number;
    /**
     * 
     * @type {Array<LanguageStatsModel>}
     * @memberof ProjectStatsModel
     */
    languageStats: Array<LanguageStatsModel>;
}

export function ProjectStatsModelFromJSON(json: any): ProjectStatsModel {
    return ProjectStatsModelFromJSONTyped(json, false);
}

export function ProjectStatsModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectStatsModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'projectId': json['projectId'],
        'languageCount': json['languageCount'],
        'keyCount': json['keyCount'],
        'baseWordsCount': json['baseWordsCount'],
        'translatedPercentage': json['translatedPercentage'],
        'reviewedPercentage': json['reviewedPercentage'],
        'membersCount': json['membersCount'],
        'tagCount': json['tagCount'],
        'languageStats': ((json['languageStats'] as Array<any>).map(LanguageStatsModelFromJSON)),
    };
}

export function ProjectStatsModelToJSON(value?: ProjectStatsModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'projectId': value.projectId,
        'languageCount': value.languageCount,
        'keyCount': value.keyCount,
        'baseWordsCount': value.baseWordsCount,
        'translatedPercentage': value.translatedPercentage,
        'reviewedPercentage': value.reviewedPercentage,
        'membersCount': value.membersCount,
        'tagCount': value.tagCount,
        'languageStats': ((value.languageStats as Array<any>).map(LanguageStatsModelToJSON)),
    };
}

