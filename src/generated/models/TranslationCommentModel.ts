/* tslint:disable */
/* eslint-disable */
/**
 * Tolgee API 
 * Tolgee Server API reference
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserAccountModel,
    UserAccountModelFromJSON,
    UserAccountModelFromJSONTyped,
    UserAccountModelToJSON,
} from './UserAccountModel';

/**
 * 
 * @export
 * @interface TranslationCommentModel
 */
export interface TranslationCommentModel {
    /**
     * Id of translation comment record
     * @type {number}
     * @memberof TranslationCommentModel
     */
    id: number;
    /**
     * Text of comment
     * @type {string}
     * @memberof TranslationCommentModel
     */
    text: string;
    /**
     * State of translation
     * @type {string}
     * @memberof TranslationCommentModel
     */
    state: TranslationCommentModelStateEnum;
    /**
     * 
     * @type {UserAccountModel}
     * @memberof TranslationCommentModel
     */
    author: UserAccountModel;
    /**
     * Date when it was created
     * @type {Date}
     * @memberof TranslationCommentModel
     */
    createdAt: Date;
    /**
     * Date when it was updated
     * @type {Date}
     * @memberof TranslationCommentModel
     */
    updatedAt: Date;
}

/**
* @export
* @enum {string}
*/
export enum TranslationCommentModelStateEnum {
    ResolutionNotNeeded = 'RESOLUTION_NOT_NEEDED',
    NeedsResolution = 'NEEDS_RESOLUTION',
    Resolved = 'RESOLVED'
}

export function TranslationCommentModelFromJSON(json: any): TranslationCommentModel {
    return TranslationCommentModelFromJSONTyped(json, false);
}

export function TranslationCommentModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslationCommentModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'text': json['text'],
        'state': json['state'],
        'author': UserAccountModelFromJSON(json['author']),
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function TranslationCommentModelToJSON(value?: TranslationCommentModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'text': value.text,
        'state': value.state,
        'author': UserAccountModelToJSON(value.author),
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
    };
}

